#!/bin/sh

if [ ! -d "~/dotfiles" ]; then
  git clone git://github.com/drapergeek/dotfiles.git ~/dotfiles
  cd ~/dotfiles
  install.sh
fi

#other binaries
binaries=(
  tree
)

echo "installing binaries..."
brew install ${binaries[@]}

brew tap caskroom/cask

apps=(
  adium
  alfred
  firefox
  iterm2
  atom
  flux
  transmission
  slate
  bartender
  screenhero
  karabiner
)

# Install apps to /Applications
# Default is: /Users/$user/Applications
echo "installing apps..."
brew cask install --appdir="/Applications" ${apps[@]}

#link Alfred for cask apps
brew cask alfred link

# Fonts
brew tap caskroom/fonts

# fonts
fonts=(
  font-inconsolata
)

# install fonts
echo "installing fonts..."
brew cask install ${fonts[@]}

brew cleanup


# OSX for Hackers (Mavericks/Yosemite)
#
# Source: https://gist.github.com/brandonb927/3195465

sudo -v
echo "This script will make your Mac awesome"

# Set the colours you can use
black='\033[0;30m'
white='\033[0;37m'
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
blue='\033[0;34m'
magenta='\033[0;35m'
cyan='\033[0;36m'


#  Reset text attributes to normal + without clearing screen.
alias Reset="tput sgr0"

# Color-echo.
# arg $1 = message
# arg $2 = Color
cecho() {
    echo "${2}${1}"
      Reset # Reset to normal.
        return
      }

###############################################################################
# General UI/UX
###############################################################################

echo ""
echo "Hide the Time Machine and User icons"
for domain in ~/Library/Preferences/ByHost/com.apple.systemuiserver.*; do
    defaults write "${domain}" dontAutoLoad -array \
          "/System/Library/CoreServices/Menu Extras/TimeMachine.menu" \
                  "/System/Library/CoreServices/Menu Extras/User.menu"
  done
  defaults write com.apple.systemuiserver menuExtras -array \
      "/System/Library/CoreServices/Menu Extras/Bluetooth.menu" \
        "/System/Library/CoreServices/Menu Extras/AirPort.menu" \
          "/System/Library/CoreServices/Menu Extras/Battery.menu" \
            "/System/Library/CoreServices/Menu Extras/Clock.menu"

  sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search

  echo ""
  echo "Disabling OS X Gate Keeper"
  echo "(You'll be able to install any app you want from here on, not just Mac App Store apps)"
  sudo spctl --master-disable
  sudo defaults write /var/db/SystemPolicy-prefs.plist enabled -string no
  defaults write com.apple.LaunchServices LSQuarantine -bool false

  echo ""
  echo "Increasing the window resize speed for Cocoa applications"
  defaults write NSGlobalDomain NSWindowResizeTime -float 0.001

  echo ""
  echo "Expanding the save panel by default"
  defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true
  defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true
  defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true

  echo ""
  echo "Automatically quit printer app once the print jobs complete"
  defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

  echo ""
  echo "Displaying ASCII control characters using caret notation in standard text views"
  defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true

  echo ""
  echo "Disabling system-wide resume"
  defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool false

  echo ""
  echo "Disabling automatic termination of inactive apps"
  defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true

  echo ""
  echo "Saving to disk (not to iCloud) by default"
  defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

  echo ""
  echo "Reveal IP address, hostname, OS version, etc. when clicking the clock in the login window"
  sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName

  echo ""
  echo "Never go into computer sleep mode"
  systemsetup -setcomputersleep Off > /dev/null

  echo ""
  echo "Check for software updates daily, not just once per week"
  defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1

  echo ""
  echo "Disable smart quotes and smart dashes as theyâ€™re annoying when typing code"
  defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false
  defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false


  echo ""
  echo "Hiding the spotlight icon"
  sudo chmod 600 /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search


  ###############################################################################
  # Trackpad, mouse, keyboard, Bluetooth accessories, and input
  ###############################################################################

  echo ""
  echo "Increasing sound quality for Bluetooth headphones/headsets"
  defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40

  echo ""
  echo "Enabling full keyboard access for all controls (e.g. enable Tab in modal dialogs)"
  defaults write NSGlobalDomain AppleKeyboardUIMode -int 3

  echo ""
  echo "Setting a blazingly fast keyboard repeat rate (ain't nobody got time fo special chars while coding!)"
  defaults write NSGlobalDomain KeyRepeat -int 0

  echo ""
  echo "Setting trackpad & mouse speed to a reasonable number"
  defaults write -g com.apple.trackpad.scaling 2
  defaults write -g com.apple.mouse.scaling 2.5

  echo ""
  echo "Turn off keyboard illumination when computer is not used for 5 minutes"
  defaults write com.apple.BezelServices kDimTime -int 300

  ###############################################################################
  # Screen
  ###############################################################################

  echo ""
  echo "Requiring password 2 minutes after sleep or screen saver begins"
  defaults write com.apple.screensaver askForPassword -int 1
  defaults write com.apple.screensaver askForPasswordDelay -int 2

  echo ""
  echo "Enabling subpixel font rendering on non-Apple LCDs"
  defaults write NSGlobalDomain AppleFontSmoothing -int 2

  echo ""
  echo "Enable HiDPI display modes (requires restart)"
  sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true

  ###############################################################################
  # Finder
  ###############################################################################

  echo ""
  echo "Showing icons for hard drives, servers, and removable media on the desktop"
  defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true

  echo ""
  echo "Showing status bar in Finder by default"
  defaults write com.apple.finder ShowStatusBar -bool true

  echo ""
  echo "Allowing text selection in Quick Look/Preview in Finder by default"
  defaults write com.apple.finder QLEnableTextSelection -bool true

  echo ""
  echo "Disabling the warning when changing a file extension"
  defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

  echo ""
  echo "Use column view in all Finder windows by default"
  defaults write com.apple.finder FXPreferredViewStyle Clmv

  echo ""
  echo "Avoiding the creation of .DS_Store files on network volumes"
  defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

  echo ""
  echo "Show dotfiles in the Finder"
  defaults write com.apple.finder AppleShowAllFiles TRUE

  echo ""
  echo "Disabling disk image verification"
  defaults write com.apple.frameworks.diskimages skip-verify -bool true
  defaults write com.apple.frameworks.diskimages skip-verify-locked -bool true
  defaults write com.apple.frameworks.diskimages skip-verify-remote -bool true

  echo ""
  echo "Enabling snap-to-grid for icons on the desktop and in other icon views"
  /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
  /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
  /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

  ###############################################################################
  # Dock & Mission Control
  ###############################################################################

  remove_dock_items() {
    [ "$FIRST_RUN" = "true" ];
  }

  if remove_dock_items; then
    echo "Removing all dock items"
    defaults write com.apple.dock persistent-apps -array
  fi

  echo ""
  echo "Setting the icon size of Dock items to 36 pixels for optimal size/screen-realestate"
  defaults write com.apple.dock tilesize -int 36

  echo ""
  echo "Speeding up Mission Control animations and grouping windows by application"
  defaults write com.apple.dock expose-animation-duration -float 0.1
  defaults write com.apple.dock "expose-group-by-app" -bool true

  echo ""
  echo "Setting Dock to auto-hide and removing the auto-hiding delay"
  defaults write com.apple.dock orientation -string right
  defaults write com.apple.dock autohide -bool true
  defaults write com.apple.dock autohide-delay -float 0
  defaults write com.apple.dock autohide-time-modifier -float 0


  ###############################################################################
  # Safari & WebKit
  ###############################################################################

  echo ""
  echo "Enabling Safari debug menu"
  defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

  echo ""
  echo "Enabling the Develop menu and the Web Inspector in Safari"
  defaults write com.apple.Safari IncludeDevelopMenu -bool true
  defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
  defaults write com.apple.Safari "com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled" -bool true

  echo ""
  echo "Adding a context menu item for showing the Web Inspector in web views"
  defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

  ###############################################################################
  # Time Machine
  ###############################################################################

  echo ""
  echo "Preventing Time Machine from prompting to use new hard drives as backup volume"
  defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true

  echo ""
  echo "Disabling local Time Machine backups"
  hash tmutil &> /dev/null && sudo tmutil disablelocal

  ###############################################################################
  # Transmission.app                                                            #
  ###############################################################################

  setup_transmission() {
    [ "$TRANSMISSION" = "true" ];
  }

  if setup_transmission; then
    echo "Setting up Transmission for torrenting?"
    echo ""
    echo "Use `~/Downloads/Incomplete` to store incomplete downloads"
    defaults write org.m0k.transmission UseIncompleteDownloadFolder -bool true
    mkdir -p ~/Downloads/Incomplete
    defaults write org.m0k.transmission IncompleteDownloadFolder -string "${HOME}/Downloads/Incomplete"

    echo ""
    echo "Don't prompt for confirmation before downloading"
    defaults write org.m0k.transmission DownloadAsk -bool false

    echo ""
    echo "Trash original torrent files"
    defaults write org.m0k.transmission DeleteOriginalTorrent -bool true

    echo ""
    echo "Hide the donate message"
    defaults write org.m0k.transmission WarningDonate -bool false

    echo ""
    echo "Hide the legal disclaimer"
    defaults write org.m0k.transmission WarningLegal -bool false
  fi



  ###############################################################################
  # Personal Additions
  ###############################################################################
  echo ""
  echo "Disable hibernation (speeds up entering sleep mode)"
  sudo pmset -a hibernatemode 0

  echo ""
  echo "Disable the sudden motion sensor as itâ€™s not useful for SSDs"
  sudo pmset -a sms 0

  echo ""
  echo "Speeding up wake from sleep to 24 hours from an hour"
  # http://www.cultofmac.com/221392/quick-hack-speeds-up-retina-macbooks-wake-from-sleep-os-x-tips/
  sudo pmset -a standbydelay 86400

  echo ""
  echo "Disable annoying backswipe in Chrome"
  defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false

  remove_sleep_file() {
    [ "$SLEEP_FILE" = "true" ];
  }

  if remove_sleep_file; then
    echo ""
    echo "Remove the sleep image file to save disk space? (y/n)"
    echo "(If you're on a <128GB SSD, this helps but can have adverse affects on performance. You've been warned.)"
    sudo rm /Private/var/vm/sleepimage
    echo "Creating a zero-byte file instead"
    sudo touch /Private/var/vm/sleepimage
    echo "and make sure it can't be rewritten"
    sudo chflags uchg /Private/var/vm/sleepimage
  fi

  defaults write ~/Library/Preferences/.GlobalPreferences CGDisableCursorLocationMagnification -bool YES

  ###############################################################################
  # Kill affected applications
  ###############################################################################
  echo ""
  cecho "Done!" $cyan
