source $HOME/.vim/test_runners.vim
source $HOME/.vim/shortcuts.vim

" Display extra whitespace
set list listchars=tab:»·,trail:♣


Plugin 'sheerun/dracula-theme'
color dracula

highlight NonText guibg=#060606
highlight Folded  guibg=#0A0A0A guifg=#9090D0

set number

" Snippets are activated by Shift+Tab
let g:snippetsEmu_key = "<S-Tab>"

" Persisted undo
silent !mkdir ~/.vim/backups > /dev/null 2>&1
set undodir=~/.vim/backups
set undofile

" Clipboard for tmux
set clipboard=unnamed

set scrolloff=5

" Show the 80 char column
autocmd BufWinEnter,WinEnter * setlocal colorcolumn=80
autocmd BufWinLeave,WinLeave * setlocal colorcolumn=0

let g:UltiSnipsExpandTrigger = "<S-tab>"
let g:UltiSnipsListSnippets = "<c-j>"
let g:UltiSnipsJumpForwardTrigger = "<S-tab>"
let g:UltiSnipsJumpBackwardTrigger = "<c-k>"

"turbux
let g:no_turbux_mappings = 1
map <leader>a <Plug>SendTestToTmux
map <leader>l <Plug>SendFocusedTestToTmux
" let g:turbux_command_prefix = 'bundle exec'

"SuperTab
let g:SuperTabNoCompleteAfter = ['^', ',', '\s']

let g:syntastic_filetype_map = { 'html.handlebars': 'handlebars' }
" let g:syntastic_handlebars_checkers=['']

Plugin 'slim-template/vim-slim'
au BufNewFile,BufRead *.slim set filetype=slim

Plugin 'bling/vim-airline'
let g:airline_powerline_fonts = 1

"Only show the filetype
let g:airline_section_x=""
let g:airline_section_y="%y"

"Only show the current line number out of total lines
let g:airline_section_z="%l/%L"

"Truncate long branch names
let g:airline#extensions#default#section_truncate_width = { 'b': 10 }

" Shorten the escaping
inoremap jj <Esc>

Plugin 'pbrisbin/vim-mkdir'

" vim pad
Plugin 'fmoralesc/vim-pad'
let g:pad#window_height = 20
let g:pad#dir = "~/Dropbox (Personal)/notes"

" elixir
Plugin 'elixir-lang/vim-elixir'
autocmd BufRead,BufNewFile *.ex* set filetype=elixir
